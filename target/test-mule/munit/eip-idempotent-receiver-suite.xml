<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="eip-idempotent-receiver-suite.xml" />
	<munit:test name="eip-idempotent-receiverFlow-test" doc:id="6a93fbb4-62c2-408c-92a4-4a33fb9b6910" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Idempotent Message Validator" doc:id="fb68c942-1b44-4e82-ae7b-62e1077efca3" processor="idempotent-message-validator">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="1a8f714a-3c61-4ddd-83b3-4daafa8182d7" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://eipidempotentreceiverFlowtest/mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://eipidempotentreceiverFlowtest/mock_attributes.dwl')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:spy doc:name="Spy Transform Message" doc:id="715665ec-7cbf-4ebc-8430-dc07ffa8258b" processor="ee:transform">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="eb5bf9a3-d08f-4b95-9f32-d0ffddb33ffa" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:before-call >
					<munit-tools:assert doc:name="Assert payload" doc:id="2d4356d3-0f61-4e58-b23e-17d90f59a100" message="The payload does not match">
						<munit-tools:that ><![CDATA[#[%dw 2.0
import eipidempotentreceiverFlowtest::spy_assert_payload
---
spy_assert_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:before-call>
				<munit-tools:after-call >
					<munit-tools:assert doc:name="Assert payload" doc:id="04c18237-bac8-4a85-8ce9-13a05afbf0f7" message="The payload does not match">
						<munit-tools:that ><![CDATA[#[%dw 2.0
import eipidempotentreceiverFlowtest::spy_assert_payload1
---
spy_assert_payload1::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:after-call>
			</munit-tools:spy>
			<munit:set-event doc:name="Set Input" doc:id="ab3a96e4-5c1e-412a-8924-4268e2a794ed" >
				<munit:payload value="#[output application/json --- readUrl('classpath://eipidempotentreceiverFlowtest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://eipidempotentreceiverFlowtest/set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to eip-idempotent-receiverFlow" doc:id="e54a8ebd-c6a5-44bc-bc1f-c275ce6a7a4c" name="eip-idempotent-receiverFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="0bfd2b00-f4e0-48ac-8542-da809197e4ec" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import eipidempotentreceiverFlowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Log input" doc:id="87e8753d-bfab-4db5-9817-47efde2f4fcf" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="200d4b15-734a-4f41-8a2c-e87726c5bc9e" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="ffa61193-c02a-4e6c-ac99-51c5bf0f0d2a" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="eb5bf9a3-d08f-4b95-9f32-d0ffddb33ffa" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="eip-idempotent-receiverFlow-test1" doc:id="3900e047-ee9c-4c05-ac85-a8702cbdbd2b" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Idempotent Message Validator" doc:id="8b634358-cb39-4188-be63-b583946d6be7" processor="idempotent-message-validator">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="1a8f714a-3c61-4ddd-83b3-4daafa8182d7" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://eipidempotentreceiverFlowtest1/mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://eipidempotentreceiverFlowtest1/mock_attributes.dwl')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:spy doc:name="Spy Transform Message" doc:id="edd719ac-0001-4555-becc-33378e6d4798" processor="ee:transform">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="eb5bf9a3-d08f-4b95-9f32-d0ffddb33ffa" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:before-call >
					<munit-tools:assert doc:name="Assert payload" doc:id="22073914-347d-45ee-9e43-58cfade2f7f6" message="The payload does not match">
						<munit-tools:that ><![CDATA[#[%dw 2.0
import eipidempotentreceiverFlowtest1::spy_assert_payload
---
spy_assert_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:before-call>
				<munit-tools:after-call >
					<munit-tools:assert doc:name="Assert payload" doc:id="7cc5cd76-a619-4faa-8e7f-cd784f5da5bb" message="The payload does not match">
						<munit-tools:that ><![CDATA[#[%dw 2.0
import eipidempotentreceiverFlowtest1::spy_assert_payload1
---
spy_assert_payload1::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:after-call>
			</munit-tools:spy>
			<munit:set-event doc:name="Set Input" doc:id="9bcb707a-b6e4-460a-8341-57b03d4f25ae" >
				<munit:payload value="#[output application/json --- readUrl('classpath://eipidempotentreceiverFlowtest1/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://eipidempotentreceiverFlowtest1/set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to eip-idempotent-receiverFlow" doc:id="f6dfebf2-59ec-49c3-acff-0407a2446922" name="eip-idempotent-receiverFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="ce394c62-cfb5-44b3-b1a8-1dfb834f583d" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import eipidempotentreceiverFlowtest1::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Log input" doc:id="7e41d652-8678-4231-b8ab-c39a303a6d7a" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="200d4b15-734a-4f41-8a2c-e87726c5bc9e" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Log response" doc:id="0f48e5ff-f2cc-4e45-b524-9b4a3c556722" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b911116b-00fd-4903-b515-81d5ca52dc2c" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="3d51ce04-389a-4ad5-89a0-f9c211d90c34" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="eb5bf9a3-d08f-4b95-9f32-d0ffddb33ffa" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>

</mule>
